@import "variables.less";


// Variables
.translucentBackground {
    background-color: rgba(250,250,250,0.9);
            backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
}
@tabbarHeight: 50.5px;
@lineThickness: 0.5px;
.navShowHideTransition {
    transition: transform 0.2s ease-in-out;
}
.firstButtonActiveState {
    #tabbarSpecialButton {
        background-color: @color1;
        span.tabName {
            color: white;
        }
        svg {
            fill: white;
        }
    }
}


html {
    background-color: black;
}

body {
    padding-bottom: @tabbarHeight;
}


nav ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    li {
        display: inline-block;
    }
}

header#titleHeader {
    background-color: @color1;
    color: white;
    width: 100%;
    height: 50px;
    position: relative;
    span#mainTitle {
        line-height: 50px;
        font-size: 24px;
        font-weight: bold;
        padding-left: 20px;
        a {
            color: white;
            text-decoration: none;
        }
    }
    a#mainLogo {
        position: absolute;
        background: @color1;
        padding: 3px;
        height: 56px;
        width: 56px;
        top: 17px;
        right: 17px;
        svg {
            height: 100%;
            width: 100%;
            fill: white;
        }
    }
}

nav#tabbarNavigation {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1000;
    border-top: @lineThickness solid @colorLine;
    .navShowHideTransition;
    .translucentBackground;
    ul {
        display: flex;
        justify-content: space-around;
        li.tabbarItem {
            display: block;
            width: 20%;
            position: relative;
            a {
                height: 50px;
                display: block;
                position: relative;
                span.tabName {
                    position: absolute;
                    bottom: 2px;
                    left: 0;
                    right: 0;
                    text-align: center;
                    font-size: 10px;
                    color: @colorInactive;
                }
                svg {
                    height: 30px;
                    width: 100%;
                    margin: 3.5px auto;
                    fill: @colorInactive;
                }
            }
            a.noLabel {
                svg {
                    margin: 10px auto;
                }
            }
            a.active, a:hover {
                span.tabName {
                    color: @color1;
                }
                svg {
                    fill: @color1;
                }
            }
        }
        li.tabbarItem:first-child a {
            border-right: @lineThickness solid @colorLine;
    /*
            background-color: white;
            span.tabName {
                color: white;
            }
            svg {
                fill: white;
            }
    */
        }
    }
}

nav#secondNavigation {
    padding: 2px 10px;
    vertical-align: bottom;
    a {
        display: inline-block;
        text-decoration: none;
        color: @color1;
        padding: 5px 10px;
        &:hover {
            text-decoration: underline;
        }
    }
}

#actionDrawerNavigation {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    .navShowHideTransition;
    overflow: hidden;
    border-top-left-radius:  10px;
    border-top-right-radius: 10px;

    max-height: calc(100vh);
//     max-height: ~"calc(100vh - @{tabbarHeight})";
    z-index: 800;
//     transform: translateY(~"calc(100vh - ( @{tabbarHeight}) )");
    transform: translateY(100vh);
    border-top: @lineThickness solid @colorLine;
    
    box-shadow: 0 10px 50px 0 rgba(0, 0, 0, .5)
}
#actionDrawerTitleBar {
    background-color: white;
    border-bottom: @lineThickness solid @colorLine;
    position: relative;
    .iOSFontStyling;
    padding: 7px 15px 8px;
    span {
        text-align: center;
        font-weight: bold;
        width: 100%;
        display: block;
    }
    a#actionDrawerClose {
        position: absolute;
        top: 7px;
        right: 15px;
        text-decoration: none;
        color: @color1;
    }
}
#actionDrawerContent {
    .translucentBackground;
    overflow: scroll;
}

// Tabbar tooltip styling
@keyframes float { // Floating animation from https://codepen.io/MarioDesigns/pen/woJgeo
	0% {
		transform: translatey(0px);
	}
	50% {
		transform: translatey(-3px);
	}
	100% {
		transform: translatey(0px);
	}
}

#tabbarTooltip {
    position: absolute;
    background-color: @color1;
    color: white;
    bottom: 54px;
    left: 4px;
    display: block;
    text-align: center;
    padding: 4px 7px 6px;
    border-radius: 5px;
   	animation: float 3s ease-in-out infinite;
    .navShowHideTransition;
    span {
        position: relative;
        z-index: 3;
        white-space: nowrap;
    }
    div {
        width: 15px;
        height: 15px;
        background-color: inherit;
        position: absolute;
        z-index: 0;
        bottom: -5px;
        left: 21px;
        transform: rotate(45deg);
    }
    &.changed { // Don't show tooltip again after it's been changed (eg. clicked)
        display: none;
    }
}

nav#tabbarNavigation a:hover div#tabbarTooltip span {
    text-decoration: underline;
}



// Add and alter elements when a view is filtered
#filterIndicationBar {
    display: none;
    position: fixed;
    left: 0;
    right: 0;
    bottom: @tabbarHeight;
    z-index: 999;
    .navShowHideTransition;
    .translucentBackground;
    color: @color1;
//     background-color: pink; // temporary debugging
    padding: 5px 10px;
    text-decoration: none;
    text-align: center;
    border-top: @lineThickness solid @colorLine;
}

#navigationElements.filtered {
    #filterIndicationBar {
        display: block;
    }
    .firstButtonActiveState;
}


// When the action drawer is toggled, open the drawer, lock the tabbar, hide the filterbar and change the button
#navigationElements.actionDrawerToggled {
    #actionDrawerNavigation {
        transform: translateY(0);
    }

    #filterIndicationBar {
        transform: translateY(2 * @tabbarHeight);
    }
    .firstButtonActiveState;
}
/*
body {
    margin: 0;
//     transition-property: margin, transform, border-radius;
    transition-duration: .2s;
    transition-timing-function: ease-in-out;
}
body.actionDrawerToggled {
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
//     margin: 20px auto 0;
//     width: ~"calc(100% - 40px)";
//     transform: scaleX(.9)
}
*/




// Hide the navigation bar on scrolldown, show on scroll up (if action drawer is not opened)
#navigationElements.tabbarHidden:not(.actionDrawerToggled) {
    nav#tabbarNavigation {
        transform: translateY(@tabbarHeight);
        a #tabbarTooltip {
            transform: translateY(100px);
            animation: none;
        }
    }
    #filterIndicationBar {
        transform: translateY(@tabbarHeight);
    }
}


// iOS style cell row elements
.iOSFontStyling {
    font-size: 17px;
    line-height: 29px;
}
.cellSeparator {
    &:after {
        content:''; 
        position: absolute;
        left: 59px;
        right: 0px;
        bottom: -@lineThickness;
        z-index: 8;
        background: @colorLine;
        height: @lineThickness;
    }
}

nav#tabbarNavigation {
    
    ul.cellRowGroup {
        .iOSFontStyling;
        display: block;
        width: 100%;
        margin: 25px auto;
        .cellGroupTitle {
            padding: 0 15px;
            font-weight: bold;
        }
    }
    li.cellRow {
        .iOSFontStyling;
        display: flex;
        justify-content: flex-start;
        align-content: center;
        width: 100%;
        background-color: white;
        text-decoration: none;
        padding: 7px 15px 8px;
        position: relative;
        .cellSeparator;
        &:first-of-type {
            border-top:    @lineThickness solid @colorLine;
        }
        &:last-of-type {
            &:after {
                content: none;
            }
            border-bottom: @lineThickness solid @colorLine;
        }
        .cellIcon {
            height: 29px;
            width: 29px;
            border-radius: 6px;
            background-color: red;
            margin-right: 14px;
            display: block;
            text-align: center;
            i {
                color: white;
            }
        }
        .cellLabel {
            display: block;
            flex-grow: 2;
            color: @colorBodyText;
        }
        .cellValue {
            color: @colorInactive;
            text-align: right;
        }
        .cellClosingIcon {
            height: 29px;
            float: right;
            &.download svg {
                fill: @color1;
                height: 29px;
                margin-right: -9px
            }
            &.chevron svg {
                fill: @colorInactive;
            }
        }
    }
    
    
}



